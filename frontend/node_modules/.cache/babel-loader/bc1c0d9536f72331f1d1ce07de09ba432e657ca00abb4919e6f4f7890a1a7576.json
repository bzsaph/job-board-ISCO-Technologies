{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../../services/api';\n\n// Fetch all jobs (public)\nexport const fetchJobs = createAsyncThunk('jobs/fetch', async (params = '') => {\n  const res = await api.get(`/jobs${params}`);\n  return res.data;\n});\n\n// Fetch single job (public)\nexport const fetchJob = createAsyncThunk('jobs/fetchOne', async id => {\n  const res = await api.get(`/jobs/${id}`);\n  return res.data;\n});\n\n// Create job (requires auth)\nexport const createJob = createAsyncThunk('jobs/create', async (payload, {\n  getState\n}) => {\n  const token = getState().auth.token;\n  if (!token) throw new Error('Not logged in');\n  const res = await api.post('/jobs', payload, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  });\n  return res.data;\n});\n\n// Update job (requires auth)\nexport const updateJob = createAsyncThunk('jobs/update', async ({\n  id,\n  data\n}, {\n  getState\n}) => {\n  const token = getState().auth.token;\n  if (!token) throw new Error('Not logged in');\n  const res = await api.put(`/jobs/${id}`, data, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  });\n  return res.data;\n});\n\n// Delete job (requires auth)\nexport const deleteJob = createAsyncThunk('jobs/delete', async (id, {\n  getState\n}) => {\n  const token = getState().auth.token;\n  if (!token) throw new Error('Not logged in');\n  await api.delete(`/jobs/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return id;\n});\nconst slice = createSlice({\n  name: 'jobs',\n  initialState: {\n    list: [],\n    current: null,\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchJobs.fulfilled, (state, action) => {\n      state.list = action.payload;\n    }).addCase(fetchJob.fulfilled, (state, action) => {\n      state.current = action.payload;\n    }).addCase(createJob.fulfilled, (state, action) => {\n      state.list.unshift(action.payload);\n    }).addCase(updateJob.fulfilled, (state, action) => {\n      state.list = state.list.map(j => j.id === action.payload.id ? action.payload : j);\n      state.current = action.payload;\n    }).addCase(deleteJob.fulfilled, (state, action) => {\n      state.list = state.list.filter(j => j.id !== action.payload);\n    });\n  }\n});\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","fetchJobs","params","res","get","data","fetchJob","id","createJob","payload","getState","token","auth","Error","post","headers","Authorization","updateJob","put","deleteJob","delete","slice","name","initialState","list","current","status","error","reducers","extraReducers","builder","addCase","fulfilled","state","action","unshift","map","j","filter","reducer"],"sources":["D:/fullstacker/job-board/frontend/src/store/slices/jobsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../../services/api';\n\n// Fetch all jobs (public)\nexport const fetchJobs = createAsyncThunk('jobs/fetch', async (params = '') => {\n  const res = await api.get(`/jobs${params}`);\n  return res.data;\n});\n\n// Fetch single job (public)\nexport const fetchJob = createAsyncThunk('jobs/fetchOne', async (id) => {\n  const res = await api.get(`/jobs/${id}`);\n  return res.data;\n});\n\n// Create job (requires auth)\nexport const createJob = createAsyncThunk(\n  'jobs/create',\n  async (payload, { getState }) => {\n    const token = getState().auth.token;\n    if (!token) throw new Error('Not logged in');\n\n    const res = await api.post('/jobs', payload, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n    });\n    return res.data;\n  }\n);\n\n// Update job (requires auth)\nexport const updateJob = createAsyncThunk(\n  'jobs/update',\n  async ({ id, data }, { getState }) => {\n    const token = getState().auth.token;\n    if (!token) throw new Error('Not logged in');\n\n    const res = await api.put(`/jobs/${id}`, data, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n    });\n    return res.data;\n  }\n);\n\n// Delete job (requires auth)\nexport const deleteJob = createAsyncThunk(\n  'jobs/delete',\n  async (id, { getState }) => {\n    const token = getState().auth.token;\n    if (!token) throw new Error('Not logged in');\n\n    await api.delete(`/jobs/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return id;\n  }\n);\n\nconst slice = createSlice({\n  name: 'jobs',\n  initialState: { list: [], current: null, status: 'idle', error: null },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchJobs.fulfilled, (state, action) => {\n        state.list = action.payload;\n      })\n      .addCase(fetchJob.fulfilled, (state, action) => {\n        state.current = action.payload;\n      })\n      .addCase(createJob.fulfilled, (state, action) => {\n        state.list.unshift(action.payload);\n      })\n      .addCase(updateJob.fulfilled, (state, action) => {\n        state.list = state.list.map((j) =>\n          j.id === action.payload.id ? action.payload : j\n        );\n        state.current = action.payload;\n      })\n      .addCase(deleteJob.fulfilled, (state, action) => {\n        state.list = state.list.filter((j) => j.id !== action.payload);\n      });\n  },\n});\n\nexport default slice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,GAAG,MAAM,oBAAoB;;AAEpC;AACA,OAAO,MAAMC,SAAS,GAAGF,gBAAgB,CAAC,YAAY,EAAE,OAAOG,MAAM,GAAG,EAAE,KAAK;EAC7E,MAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,QAAQF,MAAM,EAAE,CAAC;EAC3C,OAAOC,GAAG,CAACE,IAAI;AACjB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,QAAQ,GAAGP,gBAAgB,CAAC,eAAe,EAAE,MAAOQ,EAAE,IAAK;EACtE,MAAMJ,GAAG,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,SAASG,EAAE,EAAE,CAAC;EACxC,OAAOJ,GAAG,CAACE,IAAI;AACjB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMG,SAAS,GAAGT,gBAAgB,CACvC,aAAa,EACb,OAAOU,OAAO,EAAE;EAAEC;AAAS,CAAC,KAAK;EAC/B,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC,CAACE,IAAI,CAACD,KAAK;EACnC,IAAI,CAACA,KAAK,EAAE,MAAM,IAAIE,KAAK,CAAC,eAAe,CAAC;EAE5C,MAAMV,GAAG,GAAG,MAAMH,GAAG,CAACc,IAAI,CAAC,OAAO,EAAEL,OAAO,EAAE;IAC3CM,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUL,KAAK,EAAE;MAChC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EACF,OAAOR,GAAG,CAACE,IAAI;AACjB,CACF,CAAC;;AAED;AACA,OAAO,MAAMY,SAAS,GAAGlB,gBAAgB,CACvC,aAAa,EACb,OAAO;EAAEQ,EAAE;EAAEF;AAAK,CAAC,EAAE;EAAEK;AAAS,CAAC,KAAK;EACpC,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC,CAACE,IAAI,CAACD,KAAK;EACnC,IAAI,CAACA,KAAK,EAAE,MAAM,IAAIE,KAAK,CAAC,eAAe,CAAC;EAE5C,MAAMV,GAAG,GAAG,MAAMH,GAAG,CAACkB,GAAG,CAAC,SAASX,EAAE,EAAE,EAAEF,IAAI,EAAE;IAC7CU,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUL,KAAK,EAAE;MAChC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EACF,OAAOR,GAAG,CAACE,IAAI;AACjB,CACF,CAAC;;AAED;AACA,OAAO,MAAMc,SAAS,GAAGpB,gBAAgB,CACvC,aAAa,EACb,OAAOQ,EAAE,EAAE;EAAEG;AAAS,CAAC,KAAK;EAC1B,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC,CAACE,IAAI,CAACD,KAAK;EACnC,IAAI,CAACA,KAAK,EAAE,MAAM,IAAIE,KAAK,CAAC,eAAe,CAAC;EAE5C,MAAMb,GAAG,CAACoB,MAAM,CAAC,SAASb,EAAE,EAAE,EAAE;IAC9BQ,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUL,KAAK;IAChC;EACF,CAAC,CAAC;EACF,OAAOJ,EAAE;AACX,CACF,CAAC;AAED,MAAMc,KAAK,GAAGvB,WAAW,CAAC;EACxBwB,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,OAAO,EAAE,IAAI;IAAEC,MAAM,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAK,CAAC;EACtEC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC9B,SAAS,CAAC+B,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/CD,KAAK,CAACT,IAAI,GAAGU,MAAM,CAACzB,OAAO;IAC7B,CAAC,CAAC,CACDsB,OAAO,CAACzB,QAAQ,CAAC0B,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9CD,KAAK,CAACR,OAAO,GAAGS,MAAM,CAACzB,OAAO;IAChC,CAAC,CAAC,CACDsB,OAAO,CAACvB,SAAS,CAACwB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/CD,KAAK,CAACT,IAAI,CAACW,OAAO,CAACD,MAAM,CAACzB,OAAO,CAAC;IACpC,CAAC,CAAC,CACDsB,OAAO,CAACd,SAAS,CAACe,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/CD,KAAK,CAACT,IAAI,GAAGS,KAAK,CAACT,IAAI,CAACY,GAAG,CAAEC,CAAC,IAC5BA,CAAC,CAAC9B,EAAE,KAAK2B,MAAM,CAACzB,OAAO,CAACF,EAAE,GAAG2B,MAAM,CAACzB,OAAO,GAAG4B,CAChD,CAAC;MACDJ,KAAK,CAACR,OAAO,GAAGS,MAAM,CAACzB,OAAO;IAChC,CAAC,CAAC,CACDsB,OAAO,CAACZ,SAAS,CAACa,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/CD,KAAK,CAACT,IAAI,GAAGS,KAAK,CAACT,IAAI,CAACc,MAAM,CAAED,CAAC,IAAKA,CAAC,CAAC9B,EAAE,KAAK2B,MAAM,CAACzB,OAAO,CAAC;IAChE,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeY,KAAK,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}