{"ast":null,"code":"import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import api from'../../services/api';// Apply for a job (coverLetter file + CV link)\nexport const applyJob=createAsyncThunk('applications/apply',async(data,_ref)=>{let{rejectWithValue}=_ref;try{const res=await api.post('/applications',data);return res.data;}catch(err){var _err$response;return rejectWithValue(((_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.data)||{message:err.message});}});// / Fetch applications of the logged-in user\nexport const fetchMyApplications=createAsyncThunk('applications/fetchMyApplications',async(_,_ref2)=>{let{rejectWithValue}=_ref2;try{const res=await api.get('/applications/mine');// backend endpoint\nreturn res.data;}catch(err){var _err$response2;return rejectWithValue(((_err$response2=err.response)===null||_err$response2===void 0?void 0:_err$response2.data)||{message:err.message});}});// Fetch cover letter as Blob and convert to URL\nexport const fetchCoverLetter=createAsyncThunk('applications/fetchCoverLetter',async(filename,_ref3)=>{let{rejectWithValue}=_ref3;try{const res=await api.get(\"/files/\".concat(filename),{responseType:'blob'});const url=window.URL.createObjectURL(res.data);return url;}catch(err){var _err$response3;return rejectWithValue(((_err$response3=err.response)===null||_err$response3===void 0?void 0:_err$response3.data)||{message:err.message});}});// Get all applications for a specific job (admin)\nexport const getApplicationsForJob=createAsyncThunk('applications/forJob',async(jobId,_ref4)=>{let{rejectWithValue}=_ref4;try{const res=await api.get(\"/applications/job/\".concat(jobId));return res.data;}catch(err){var _err$response4;return rejectWithValue(((_err$response4=err.response)===null||_err$response4===void 0?void 0:_err$response4.data)||{message:err.message});}});// Fetch job details\nexport const fetchJob=createAsyncThunk('jobs/fetchJob',async(jobId,_ref5)=>{let{rejectWithValue}=_ref5;try{const res=await api.get(\"/jobs/\".concat(jobId));return res.data;}catch(err){var _err$response5;return rejectWithValue(((_err$response5=err.response)===null||_err$response5===void 0?void 0:_err$response5.data)||{message:err.message});}});// Update application status\nexport const updateApplicationStatus=createAsyncThunk('applications/update',async(_ref6,_ref7)=>{let{id,status}=_ref6;let{rejectWithValue}=_ref7;try{const res=await api.put(\"/applications/\".concat(id),{status});return res.data;}catch(err){var _err$response6;return rejectWithValue(((_err$response6=err.response)===null||_err$response6===void 0?void 0:_err$response6.data)||{message:err.message});}});const slice=createSlice({name:'applications',initialState:{list:[],last:null,status:'idle',error:null},reducers:{clearError:state=>{state.error=null;}},extraReducers:builder=>{builder.addCase(applyJob.fulfilled,(state,action)=>{state.last=action.payload;state.error=null;}).addCase(applyJob.rejected,(state,action)=>{var _action$payload;state.error=((_action$payload=action.payload)===null||_action$payload===void 0?void 0:_action$payload.message)||'Failed to apply';}).addCase(getApplicationsForJob.fulfilled,(state,action)=>{state.list=action.payload;state.error=null;}).addCase(getApplicationsForJob.rejected,(state,action)=>{var _action$payload2;state.error=((_action$payload2=action.payload)===null||_action$payload2===void 0?void 0:_action$payload2.message)||'Failed to fetch applications';}).addCase(updateApplicationStatus.fulfilled,(state,action)=>{state.list=state.list.map(x=>x.id===action.payload.id?action.payload:x);state.error=null;}).addCase(updateApplicationStatus.rejected,(state,action)=>{var _action$payload3;state.error=((_action$payload3=action.payload)===null||_action$payload3===void 0?void 0:_action$payload3.message)||'Failed to update status';});}});export const{clearError}=slice.actions;export default slice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","applyJob","data","_ref","rejectWithValue","res","post","err","_err$response","response","message","fetchMyApplications","_","_ref2","get","_err$response2","fetchCoverLetter","filename","_ref3","concat","responseType","url","window","URL","createObjectURL","_err$response3","getApplicationsForJob","jobId","_ref4","_err$response4","fetchJob","_ref5","_err$response5","updateApplicationStatus","_ref6","_ref7","id","status","put","_err$response6","slice","name","initialState","list","last","error","reducers","clearError","state","extraReducers","builder","addCase","fulfilled","action","payload","rejected","_action$payload","_action$payload2","map","x","_action$payload3","actions","reducer"],"sources":["D:/fullstacker/job-board/frontend/src/store/slices/applicationsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api from '../../services/api';\r\n\r\n// Apply for a job (coverLetter file + CV link)\r\nexport const applyJob = createAsyncThunk(\r\n  'applications/apply',\r\n  async (data, { rejectWithValue }) => {\r\n    try {\r\n      const res = await api.post('/applications', data);\r\n      return res.data;\r\n    } catch (err) {\r\n      return rejectWithValue(err.response?.data || { message: err.message });\r\n    }\r\n  }\r\n);\r\n\r\n// / Fetch applications of the logged-in user\r\nexport const fetchMyApplications = createAsyncThunk(\r\n  'applications/fetchMyApplications',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const res = await api.get('/applications/mine'); // backend endpoint\r\n      return res.data;\r\n    } catch (err) {\r\n      return rejectWithValue(err.response?.data || { message: err.message });\r\n    }\r\n  }\r\n);\r\n\r\n\r\n// Fetch cover letter as Blob and convert to URL\r\nexport const fetchCoverLetter = createAsyncThunk(\r\n  'applications/fetchCoverLetter',\r\n  async (filename, { rejectWithValue }) => {\r\n    try {\r\n      const res = await api.get(`/files/${filename}`, { responseType: 'blob' });\r\n      const url = window.URL.createObjectURL(res.data);\r\n      return url;\r\n    } catch (err) {\r\n      return rejectWithValue(err.response?.data || { message: err.message });\r\n    }\r\n  }\r\n);\r\n\r\n// Get all applications for a specific job (admin)\r\nexport const getApplicationsForJob = createAsyncThunk(\r\n  'applications/forJob',\r\n  async (jobId, { rejectWithValue }) => {\r\n    try {\r\n      const res = await api.get(`/applications/job/${jobId}`);\r\n      return res.data;\r\n    } catch (err) {\r\n      return rejectWithValue(err.response?.data || { message: err.message });\r\n    }\r\n  }\r\n);\r\n\r\n// Fetch job details\r\nexport const fetchJob = createAsyncThunk(\r\n  'jobs/fetchJob',\r\n  async (jobId, { rejectWithValue }) => {\r\n    try {\r\n      const res = await api.get(`/jobs/${jobId}`);\r\n      return res.data;\r\n    } catch (err) {\r\n      return rejectWithValue(err.response?.data || { message: err.message });\r\n    }\r\n  }\r\n);\r\n\r\n// Update application status\r\nexport const updateApplicationStatus = createAsyncThunk(\r\n  'applications/update',\r\n  async ({ id, status }, { rejectWithValue }) => {\r\n    try {\r\n      const res = await api.put(`/applications/${id}`, { status });\r\n      return res.data;\r\n    } catch (err) {\r\n      return rejectWithValue(err.response?.data || { message: err.message });\r\n    }\r\n  }\r\n);\r\n\r\nconst slice = createSlice({\r\n  name: 'applications',\r\n  initialState: {\r\n    list: [],\r\n    last: null,\r\n    status: 'idle',\r\n    error: null\r\n  },\r\n  reducers: {\r\n    clearError: (state) => { state.error = null; }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(applyJob.fulfilled, (state, action) => {\r\n        state.last = action.payload;\r\n        state.error = null;\r\n      })\r\n      .addCase(applyJob.rejected, (state, action) => {\r\n        state.error = action.payload?.message || 'Failed to apply';\r\n      })\r\n\r\n      .addCase(getApplicationsForJob.fulfilled, (state, action) => {\r\n        state.list = action.payload;\r\n        state.error = null;\r\n      })\r\n      .addCase(getApplicationsForJob.rejected, (state, action) => {\r\n        state.error = action.payload?.message || 'Failed to fetch applications';\r\n      })\r\n\r\n      .addCase(updateApplicationStatus.fulfilled, (state, action) => {\r\n        state.list = state.list.map(x => x.id === action.payload.id ? action.payload : x);\r\n        state.error = null;\r\n      })\r\n      .addCase(updateApplicationStatus.rejected, (state, action) => {\r\n        state.error = action.payload?.message || 'Failed to update status';\r\n      });\r\n  }\r\n});\r\n\r\nexport const { clearError } = slice.actions;\r\nexport default slice.reducer;\r\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,gBAAgB,KAAQ,kBAAkB,CAChE,MAAO,CAAAC,GAAG,KAAM,oBAAoB,CAEpC;AACA,MAAO,MAAM,CAAAC,QAAQ,CAAGF,gBAAgB,CACtC,oBAAoB,CACpB,MAAOG,IAAI,CAAAC,IAAA,GAA0B,IAAxB,CAAEC,eAAgB,CAAC,CAAAD,IAAA,CAC9B,GAAI,CACF,KAAM,CAAAE,GAAG,CAAG,KAAM,CAAAL,GAAG,CAACM,IAAI,CAAC,eAAe,CAAEJ,IAAI,CAAC,CACjD,MAAO,CAAAG,GAAG,CAACH,IAAI,CACjB,CAAE,MAAOK,GAAG,CAAE,KAAAC,aAAA,CACZ,MAAO,CAAAJ,eAAe,CAAC,EAAAI,aAAA,CAAAD,GAAG,CAACE,QAAQ,UAAAD,aAAA,iBAAZA,aAAA,CAAcN,IAAI,GAAI,CAAEQ,OAAO,CAAEH,GAAG,CAACG,OAAQ,CAAC,CAAC,CACxE,CACF,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,mBAAmB,CAAGZ,gBAAgB,CACjD,kCAAkC,CAClC,MAAOa,CAAC,CAAAC,KAAA,GAA0B,IAAxB,CAAET,eAAgB,CAAC,CAAAS,KAAA,CAC3B,GAAI,CACF,KAAM,CAAAR,GAAG,CAAG,KAAM,CAAAL,GAAG,CAACc,GAAG,CAAC,oBAAoB,CAAC,CAAE;AACjD,MAAO,CAAAT,GAAG,CAACH,IAAI,CACjB,CAAE,MAAOK,GAAG,CAAE,KAAAQ,cAAA,CACZ,MAAO,CAAAX,eAAe,CAAC,EAAAW,cAAA,CAAAR,GAAG,CAACE,QAAQ,UAAAM,cAAA,iBAAZA,cAAA,CAAcb,IAAI,GAAI,CAAEQ,OAAO,CAAEH,GAAG,CAACG,OAAQ,CAAC,CAAC,CACxE,CACF,CACF,CAAC,CAGD;AACA,MAAO,MAAM,CAAAM,gBAAgB,CAAGjB,gBAAgB,CAC9C,+BAA+B,CAC/B,MAAOkB,QAAQ,CAAAC,KAAA,GAA0B,IAAxB,CAAEd,eAAgB,CAAC,CAAAc,KAAA,CAClC,GAAI,CACF,KAAM,CAAAb,GAAG,CAAG,KAAM,CAAAL,GAAG,CAACc,GAAG,WAAAK,MAAA,CAAWF,QAAQ,EAAI,CAAEG,YAAY,CAAE,MAAO,CAAC,CAAC,CACzE,KAAM,CAAAC,GAAG,CAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACnB,GAAG,CAACH,IAAI,CAAC,CAChD,MAAO,CAAAmB,GAAG,CACZ,CAAE,MAAOd,GAAG,CAAE,KAAAkB,cAAA,CACZ,MAAO,CAAArB,eAAe,CAAC,EAAAqB,cAAA,CAAAlB,GAAG,CAACE,QAAQ,UAAAgB,cAAA,iBAAZA,cAAA,CAAcvB,IAAI,GAAI,CAAEQ,OAAO,CAAEH,GAAG,CAACG,OAAQ,CAAC,CAAC,CACxE,CACF,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAgB,qBAAqB,CAAG3B,gBAAgB,CACnD,qBAAqB,CACrB,MAAO4B,KAAK,CAAAC,KAAA,GAA0B,IAAxB,CAAExB,eAAgB,CAAC,CAAAwB,KAAA,CAC/B,GAAI,CACF,KAAM,CAAAvB,GAAG,CAAG,KAAM,CAAAL,GAAG,CAACc,GAAG,sBAAAK,MAAA,CAAsBQ,KAAK,CAAE,CAAC,CACvD,MAAO,CAAAtB,GAAG,CAACH,IAAI,CACjB,CAAE,MAAOK,GAAG,CAAE,KAAAsB,cAAA,CACZ,MAAO,CAAAzB,eAAe,CAAC,EAAAyB,cAAA,CAAAtB,GAAG,CAACE,QAAQ,UAAAoB,cAAA,iBAAZA,cAAA,CAAc3B,IAAI,GAAI,CAAEQ,OAAO,CAAEH,GAAG,CAACG,OAAQ,CAAC,CAAC,CACxE,CACF,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAoB,QAAQ,CAAG/B,gBAAgB,CACtC,eAAe,CACf,MAAO4B,KAAK,CAAAI,KAAA,GAA0B,IAAxB,CAAE3B,eAAgB,CAAC,CAAA2B,KAAA,CAC/B,GAAI,CACF,KAAM,CAAA1B,GAAG,CAAG,KAAM,CAAAL,GAAG,CAACc,GAAG,UAAAK,MAAA,CAAUQ,KAAK,CAAE,CAAC,CAC3C,MAAO,CAAAtB,GAAG,CAACH,IAAI,CACjB,CAAE,MAAOK,GAAG,CAAE,KAAAyB,cAAA,CACZ,MAAO,CAAA5B,eAAe,CAAC,EAAA4B,cAAA,CAAAzB,GAAG,CAACE,QAAQ,UAAAuB,cAAA,iBAAZA,cAAA,CAAc9B,IAAI,GAAI,CAAEQ,OAAO,CAAEH,GAAG,CAACG,OAAQ,CAAC,CAAC,CACxE,CACF,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAuB,uBAAuB,CAAGlC,gBAAgB,CACrD,qBAAqB,CACrB,MAAAmC,KAAA,CAAAC,KAAA,GAA+C,IAAxC,CAAEC,EAAE,CAAEC,MAAO,CAAC,CAAAH,KAAA,IAAE,CAAE9B,eAAgB,CAAC,CAAA+B,KAAA,CACxC,GAAI,CACF,KAAM,CAAA9B,GAAG,CAAG,KAAM,CAAAL,GAAG,CAACsC,GAAG,kBAAAnB,MAAA,CAAkBiB,EAAE,EAAI,CAAEC,MAAO,CAAC,CAAC,CAC5D,MAAO,CAAAhC,GAAG,CAACH,IAAI,CACjB,CAAE,MAAOK,GAAG,CAAE,KAAAgC,cAAA,CACZ,MAAO,CAAAnC,eAAe,CAAC,EAAAmC,cAAA,CAAAhC,GAAG,CAACE,QAAQ,UAAA8B,cAAA,iBAAZA,cAAA,CAAcrC,IAAI,GAAI,CAAEQ,OAAO,CAAEH,GAAG,CAACG,OAAQ,CAAC,CAAC,CACxE,CACF,CACF,CAAC,CAED,KAAM,CAAA8B,KAAK,CAAG1C,WAAW,CAAC,CACxB2C,IAAI,CAAE,cAAc,CACpBC,YAAY,CAAE,CACZC,IAAI,CAAE,EAAE,CACRC,IAAI,CAAE,IAAI,CACVP,MAAM,CAAE,MAAM,CACdQ,KAAK,CAAE,IACT,CAAC,CACDC,QAAQ,CAAE,CACRC,UAAU,CAAGC,KAAK,EAAK,CAAEA,KAAK,CAACH,KAAK,CAAG,IAAI,CAAE,CAC/C,CAAC,CACDI,aAAa,CAAGC,OAAO,EAAK,CAC1BA,OAAO,CACJC,OAAO,CAAClD,QAAQ,CAACmD,SAAS,CAAE,CAACJ,KAAK,CAAEK,MAAM,GAAK,CAC9CL,KAAK,CAACJ,IAAI,CAAGS,MAAM,CAACC,OAAO,CAC3BN,KAAK,CAACH,KAAK,CAAG,IAAI,CACpB,CAAC,CAAC,CACDM,OAAO,CAAClD,QAAQ,CAACsD,QAAQ,CAAE,CAACP,KAAK,CAAEK,MAAM,GAAK,KAAAG,eAAA,CAC7CR,KAAK,CAACH,KAAK,CAAG,EAAAW,eAAA,CAAAH,MAAM,CAACC,OAAO,UAAAE,eAAA,iBAAdA,eAAA,CAAgB9C,OAAO,GAAI,iBAAiB,CAC5D,CAAC,CAAC,CAEDyC,OAAO,CAACzB,qBAAqB,CAAC0B,SAAS,CAAE,CAACJ,KAAK,CAAEK,MAAM,GAAK,CAC3DL,KAAK,CAACL,IAAI,CAAGU,MAAM,CAACC,OAAO,CAC3BN,KAAK,CAACH,KAAK,CAAG,IAAI,CACpB,CAAC,CAAC,CACDM,OAAO,CAACzB,qBAAqB,CAAC6B,QAAQ,CAAE,CAACP,KAAK,CAAEK,MAAM,GAAK,KAAAI,gBAAA,CAC1DT,KAAK,CAACH,KAAK,CAAG,EAAAY,gBAAA,CAAAJ,MAAM,CAACC,OAAO,UAAAG,gBAAA,iBAAdA,gBAAA,CAAgB/C,OAAO,GAAI,8BAA8B,CACzE,CAAC,CAAC,CAEDyC,OAAO,CAAClB,uBAAuB,CAACmB,SAAS,CAAE,CAACJ,KAAK,CAAEK,MAAM,GAAK,CAC7DL,KAAK,CAACL,IAAI,CAAGK,KAAK,CAACL,IAAI,CAACe,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACvB,EAAE,GAAKiB,MAAM,CAACC,OAAO,CAAClB,EAAE,CAAGiB,MAAM,CAACC,OAAO,CAAGK,CAAC,CAAC,CACjFX,KAAK,CAACH,KAAK,CAAG,IAAI,CACpB,CAAC,CAAC,CACDM,OAAO,CAAClB,uBAAuB,CAACsB,QAAQ,CAAE,CAACP,KAAK,CAAEK,MAAM,GAAK,KAAAO,gBAAA,CAC5DZ,KAAK,CAACH,KAAK,CAAG,EAAAe,gBAAA,CAAAP,MAAM,CAACC,OAAO,UAAAM,gBAAA,iBAAdA,gBAAA,CAAgBlD,OAAO,GAAI,yBAAyB,CACpE,CAAC,CAAC,CACN,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEqC,UAAW,CAAC,CAAGP,KAAK,CAACqB,OAAO,CAC3C,cAAe,CAAArB,KAAK,CAACsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}