{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstacker\\\\job-board\\\\frontend\\\\src\\\\pages\\\\AdminApplications.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getApplicationsForJob, updateApplicationStatus } from '../store/slices/applicationsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminApplications() {\n  _s();\n  const {\n    jobId\n  } = useParams();\n  const dispatch = useDispatch();\n  const apps = useSelector(s => s.applications.list);\n  useEffect(() => {\n    if (jobId) dispatch(getApplicationsForJob(jobId));\n  }, [dispatch, jobId]);\n  const setStatus = (id, status) => dispatch(updateApplicationStatus({\n    id,\n    status\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl mb-2\",\n      children: [\"Applications for job \", jobId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: apps.map(a => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"mb-3 p-3 border rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold\",\n          children: a.applicantEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm mb-2\",\n          children: a.coverLetter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: a.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mr-2\",\n            onClick: () => setStatus(a.id, 'reviewed'),\n            children: \"Mark Reviewed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mr-2\",\n            onClick: () => setStatus(a.id, 'accepted'),\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setStatus(a.id, 'rejected'),\n            children: \"Reject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, a.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminApplications, \"0dFnMwqsTLv6bzx0RvbkznAUnwU=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = AdminApplications;\nvar _c;\n$RefreshReg$(_c, \"AdminApplications\");","map":{"version":3,"names":["React","useEffect","useParams","useDispatch","useSelector","getApplicationsForJob","updateApplicationStatus","jsxDEV","_jsxDEV","AdminApplications","_s","jobId","dispatch","apps","s","applications","list","setStatus","id","status","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","a","applicantEmail","coverLetter","onClick","_c","$RefreshReg$"],"sources":["D:/fullstacker/job-board/frontend/src/pages/AdminApplications.jsx"],"sourcesContent":["\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getApplicationsForJob, updateApplicationStatus } from '../store/slices/applicationsSlice';\n\nexport default function AdminApplications(){\n  const { jobId } = useParams();\n  const dispatch = useDispatch();\n  const apps = useSelector(s => s.applications.list);\n\n  useEffect(()=>{ if (jobId) dispatch(getApplicationsForJob(jobId)); }, [dispatch, jobId]);\n\n  const setStatus = (id, status) => dispatch(updateApplicationStatus({ id, status }));\n\n  return (\n    <div>\n      <h2 className=\"text-xl mb-2\">Applications for job {jobId}</h2>\n      <ul>\n        {apps.map(a => (\n          <li key={a.id} className=\"mb-3 p-3 border rounded\">\n            <div className=\"font-semibold\">{a.applicantEmail}</div>\n            <div className=\"text-sm mb-2\">{a.coverLetter}</div>\n            <div className=\"mb-2\">Status: <strong>{a.status}</strong></div>\n            <div>\n              <button className=\"mr-2\" onClick={()=>setStatus(a.id,'reviewed')}>Mark Reviewed</button>\n              <button className=\"mr-2\" onClick={()=>setStatus(a.id,'accepted')}>Accept</button>\n              <button onClick={()=>setStatus(a.id,'rejected')}>Reject</button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}