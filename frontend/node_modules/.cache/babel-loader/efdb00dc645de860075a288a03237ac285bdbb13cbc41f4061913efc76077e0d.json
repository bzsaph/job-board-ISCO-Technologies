{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../../services/api';\n\n// Apply for a job (coverLetter file + CV link via FormData)\nexport const applyJob = createAsyncThunk('applications/apply', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const res = await api.post('/applications', data);\n    return res.data;\n  } catch (err) {\n    var _err$response;\n    return rejectWithValue(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || {\n      message: err.message\n    });\n  }\n});\nexport const fetchCoverLetter = createAsyncThunk('applications/fetchCoverLetter', async (filename, {\n  rejectWithValue\n}) => {\n  try {\n    // fetch as blob\n    const res = await api.get(`/files/${filename}`, {\n      responseType: 'blob'\n    });\n    // convert to URL for browser\n    const url = window.URL.createObjectURL(res.data);\n    return url;\n  } catch (err) {\n    var _err$response2;\n    return rejectWithValue(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || {\n      message: err.message\n    });\n  }\n});\n\n// Fetch applications for logged-in user\nexport const getApplicationsForUser = createAsyncThunk('applications/getMyApplications', async (_, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    var _auth$user;\n    const {\n      auth\n    } = getState();\n    const userId = (_auth$user = auth.user) === null || _auth$user === void 0 ? void 0 : _auth$user.id;\n    if (!userId) throw new Error('User not logged in');\n    const res = await api.get(`/applications/mine/${userId}`, {\n      headers: {\n        'Cache-Control': 'no-cache'\n      }\n    });\n    return res.data || []; // fallback to empty array\n  } catch (err) {\n    var _err$response3;\n    console.error('Error fetching applications:', err);\n    return rejectWithValue(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data) || {\n      message: err.message\n    });\n  }\n});\n\n// Get all applications for a specific job (admin)\n\n// Fetch job details\nexport const fetchJob = createAsyncThunk('jobs/fetchJob', async (jobId, {\n  rejectWithValue\n}) => {\n  try {\n    const res = await api.get(`/jobs/${jobId}`);\n    return res.data;\n  } catch (err) {\n    var _err$response4;\n    return rejectWithValue(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.data) || {\n      message: err.message\n    });\n  }\n});\n\n// Update application status\nexport const updateApplicationStatus = createAsyncThunk('applications/update', async ({\n  id,\n  status\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const res = await api.put(`/applications/${id}`, {\n      status\n    });\n    return res.data;\n  } catch (err) {\n    var _err$response5;\n    return rejectWithValue(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : _err$response5.data) || {\n      message: err.message\n    });\n  }\n});\nconst slice = createSlice({\n  name: 'applications',\n  initialState: {\n    list: [],\n    last: null,\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: b => {\n    b.addCase(applyJob.fulfilled, (s, a) => {\n      s.last = a.payload;\n      s.error = null;\n    });\n    b.addCase(applyJob.rejected, (s, a) => {\n      var _a$payload;\n      s.error = ((_a$payload = a.payload) === null || _a$payload === void 0 ? void 0 : _a$payload.message) || 'Failed to apply';\n    });\n    b.addCase(getApplicationsForJob.fulfilled, (s, a) => {\n      s.list = a.payload;\n      s.error = null;\n    });\n    b.addCase(getApplicationsForJob.rejected, (s, a) => {\n      var _a$payload2;\n      s.error = ((_a$payload2 = a.payload) === null || _a$payload2 === void 0 ? void 0 : _a$payload2.message) || 'Failed to fetch applications';\n    });\n    b.addCase(updateApplicationStatus.fulfilled, (s, a) => {\n      s.list = s.list.map(x => x.id === a.payload.id ? a.payload : x);\n      s.error = null;\n    });\n    b.addCase(updateApplicationStatus.rejected, (s, a) => {\n      var _a$payload3;\n      s.error = ((_a$payload3 = a.payload) === null || _a$payload3 === void 0 ? void 0 : _a$payload3.message) || 'Failed to update status';\n    });\n  }\n});\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","applyJob","data","rejectWithValue","res","post","err","_err$response","response","message","fetchCoverLetter","filename","get","responseType","url","window","URL","createObjectURL","_err$response2","getApplicationsForUser","_","getState","_auth$user","auth","userId","user","id","Error","headers","_err$response3","console","error","fetchJob","jobId","_err$response4","updateApplicationStatus","status","put","_err$response5","slice","name","initialState","list","last","reducers","extraReducers","b","addCase","fulfilled","s","a","payload","rejected","_a$payload","getApplicationsForJob","_a$payload2","map","x","_a$payload3","reducer"],"sources":["D:/fullstacker/job-board/frontend/src/store/slices/applicationsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../../services/api';\n\n// Apply for a job (coverLetter file + CV link via FormData)\nexport const applyJob = createAsyncThunk(\n  'applications/apply',\n  async (data, { rejectWithValue }) => {\n    try {\n      const res = await api.post('/applications', data);\n      return res.data;\n    } catch (err) {\n      return rejectWithValue(err.response?.data || { message: err.message });\n    }\n  }\n);\nexport const fetchCoverLetter = createAsyncThunk(\n  'applications/fetchCoverLetter',\n  async (filename, { rejectWithValue }) => {\n    try {\n      // fetch as blob\n      const res = await api.get(`/files/${filename}`, { responseType: 'blob' });\n      // convert to URL for browser\n      const url = window.URL.createObjectURL(res.data);\n      return url;\n    } catch (err) {\n      return rejectWithValue(err.response?.data || { message: err.message });\n    }\n  }\n);\n\n\n\n// Fetch applications for logged-in user\nexport const getApplicationsForUser = createAsyncThunk(\n  'applications/getMyApplications',\n  async (_, { getState, rejectWithValue }) => {\n    try {\n      const { auth } = getState();\n      const userId = auth.user?.id;\n\n      if (!userId) throw new Error('User not logged in');\n\n      const res = await api.get(`/applications/mine/${userId}`, {\n        headers: {\n          'Cache-Control': 'no-cache',\n        },\n      });\n\n      return res.data || []; // fallback to empty array\n    } catch (err) {\n      console.error('Error fetching applications:', err);\n      return rejectWithValue(err.response?.data || { message: err.message });\n    }\n  }\n);\n\n\n\n// Get all applications for a specific job (admin)\n\n\n// Fetch job details\nexport const fetchJob = createAsyncThunk(\n  'jobs/fetchJob',\n  async (jobId, { rejectWithValue }) => {\n    try {\n      const res = await api.get(`/jobs/${jobId}`);\n      return res.data;\n    } catch (err) {\n      return rejectWithValue(err.response?.data || { message: err.message });\n    }\n  }\n);\n\n// Update application status\nexport const updateApplicationStatus = createAsyncThunk(\n  'applications/update',\n  async ({ id, status }, { rejectWithValue }) => {\n    try {\n      const res = await api.put(`/applications/${id}`, { status });\n      return res.data;\n    } catch (err) {\n      return rejectWithValue(err.response?.data || { message: err.message });\n    }\n  }\n);\n\nconst slice = createSlice({\n  name: 'applications',\n  initialState: { list: [], last: null, status: 'idle', error: null },\n  reducers: {},\n  extraReducers: (b) => {\n    b.addCase(applyJob.fulfilled, (s, a) => { \n      s.last = a.payload; \n      s.error = null;\n    });\n    b.addCase(applyJob.rejected, (s, a) => { \n      s.error = a.payload?.message || 'Failed to apply'; \n    });\n\n    b.addCase(getApplicationsForJob.fulfilled, (s, a) => { \n      s.list = a.payload; \n      s.error = null;\n    });\n    b.addCase(getApplicationsForJob.rejected, (s, a) => { \n      s.error = a.payload?.message || 'Failed to fetch applications'; \n    });\n\n    b.addCase(updateApplicationStatus.fulfilled, (s, a) => { \n      s.list = s.list.map(x => x.id === a.payload.id ? a.payload : x); \n      s.error = null;\n    });\n    b.addCase(updateApplicationStatus.rejected, (s, a) => { \n      s.error = a.payload?.message || 'Failed to update status'; \n    });\n  }\n});\n\nexport default slice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,GAAG,MAAM,oBAAoB;;AAEpC;AACA,OAAO,MAAMC,QAAQ,GAAGF,gBAAgB,CACtC,oBAAoB,EACpB,OAAOG,IAAI,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACnC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,eAAe,EAAEH,IAAI,CAAC;IACjD,OAAOE,GAAG,CAACF,IAAI;EACjB,CAAC,CAAC,OAAOI,GAAG,EAAE;IAAA,IAAAC,aAAA;IACZ,OAAOJ,eAAe,CAAC,EAAAI,aAAA,GAAAD,GAAG,CAACE,QAAQ,cAAAD,aAAA,uBAAZA,aAAA,CAAcL,IAAI,KAAI;MAAEO,OAAO,EAAEH,GAAG,CAACG;IAAQ,CAAC,CAAC;EACxE;AACF,CACF,CAAC;AACD,OAAO,MAAMC,gBAAgB,GAAGX,gBAAgB,CAC9C,+BAA+B,EAC/B,OAAOY,QAAQ,EAAE;EAAER;AAAgB,CAAC,KAAK;EACvC,IAAI;IACF;IACA,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACY,GAAG,CAAC,UAAUD,QAAQ,EAAE,EAAE;MAAEE,YAAY,EAAE;IAAO,CAAC,CAAC;IACzE;IACA,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACb,GAAG,CAACF,IAAI,CAAC;IAChD,OAAOY,GAAG;EACZ,CAAC,CAAC,OAAOR,GAAG,EAAE;IAAA,IAAAY,cAAA;IACZ,OAAOf,eAAe,CAAC,EAAAe,cAAA,GAAAZ,GAAG,CAACE,QAAQ,cAAAU,cAAA,uBAAZA,cAAA,CAAchB,IAAI,KAAI;MAAEO,OAAO,EAAEH,GAAG,CAACG;IAAQ,CAAC,CAAC;EACxE;AACF,CACF,CAAC;;AAID;AACA,OAAO,MAAMU,sBAAsB,GAAGpB,gBAAgB,CACpD,gCAAgC,EAChC,OAAOqB,CAAC,EAAE;EAAEC,QAAQ;EAAElB;AAAgB,CAAC,KAAK;EAC1C,IAAI;IAAA,IAAAmB,UAAA;IACF,MAAM;MAAEC;IAAK,CAAC,GAAGF,QAAQ,CAAC,CAAC;IAC3B,MAAMG,MAAM,IAAAF,UAAA,GAAGC,IAAI,CAACE,IAAI,cAAAH,UAAA,uBAATA,UAAA,CAAWI,EAAE;IAE5B,IAAI,CAACF,MAAM,EAAE,MAAM,IAAIG,KAAK,CAAC,oBAAoB,CAAC;IAElD,MAAMvB,GAAG,GAAG,MAAMJ,GAAG,CAACY,GAAG,CAAC,sBAAsBY,MAAM,EAAE,EAAE;MACxDI,OAAO,EAAE;QACP,eAAe,EAAE;MACnB;IACF,CAAC,CAAC;IAEF,OAAOxB,GAAG,CAACF,IAAI,IAAI,EAAE,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOI,GAAG,EAAE;IAAA,IAAAuB,cAAA;IACZC,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEzB,GAAG,CAAC;IAClD,OAAOH,eAAe,CAAC,EAAA0B,cAAA,GAAAvB,GAAG,CAACE,QAAQ,cAAAqB,cAAA,uBAAZA,cAAA,CAAc3B,IAAI,KAAI;MAAEO,OAAO,EAAEH,GAAG,CAACG;IAAQ,CAAC,CAAC;EACxE;AACF,CACF,CAAC;;AAID;;AAGA;AACA,OAAO,MAAMuB,QAAQ,GAAGjC,gBAAgB,CACtC,eAAe,EACf,OAAOkC,KAAK,EAAE;EAAE9B;AAAgB,CAAC,KAAK;EACpC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACY,GAAG,CAAC,SAASqB,KAAK,EAAE,CAAC;IAC3C,OAAO7B,GAAG,CAACF,IAAI;EACjB,CAAC,CAAC,OAAOI,GAAG,EAAE;IAAA,IAAA4B,cAAA;IACZ,OAAO/B,eAAe,CAAC,EAAA+B,cAAA,GAAA5B,GAAG,CAACE,QAAQ,cAAA0B,cAAA,uBAAZA,cAAA,CAAchC,IAAI,KAAI;MAAEO,OAAO,EAAEH,GAAG,CAACG;IAAQ,CAAC,CAAC;EACxE;AACF,CACF,CAAC;;AAED;AACA,OAAO,MAAM0B,uBAAuB,GAAGpC,gBAAgB,CACrD,qBAAqB,EACrB,OAAO;EAAE2B,EAAE;EAAEU;AAAO,CAAC,EAAE;EAAEjC;AAAgB,CAAC,KAAK;EAC7C,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACqC,GAAG,CAAC,iBAAiBX,EAAE,EAAE,EAAE;MAAEU;IAAO,CAAC,CAAC;IAC5D,OAAOhC,GAAG,CAACF,IAAI;EACjB,CAAC,CAAC,OAAOI,GAAG,EAAE;IAAA,IAAAgC,cAAA;IACZ,OAAOnC,eAAe,CAAC,EAAAmC,cAAA,GAAAhC,GAAG,CAACE,QAAQ,cAAA8B,cAAA,uBAAZA,cAAA,CAAcpC,IAAI,KAAI;MAAEO,OAAO,EAAEH,GAAG,CAACG;IAAQ,CAAC,CAAC;EACxE;AACF,CACF,CAAC;AAED,MAAM8B,KAAK,GAAGzC,WAAW,CAAC;EACxB0C,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE,IAAI;IAAEP,MAAM,EAAE,MAAM;IAAEL,KAAK,EAAE;EAAK,CAAC;EACnEa,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,CAAC,IAAK;IACpBA,CAAC,CAACC,OAAO,CAAC9C,QAAQ,CAAC+C,SAAS,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK;MACtCD,CAAC,CAACN,IAAI,GAAGO,CAAC,CAACC,OAAO;MAClBF,CAAC,CAAClB,KAAK,GAAG,IAAI;IAChB,CAAC,CAAC;IACFe,CAAC,CAACC,OAAO,CAAC9C,QAAQ,CAACmD,QAAQ,EAAE,CAACH,CAAC,EAAEC,CAAC,KAAK;MAAA,IAAAG,UAAA;MACrCJ,CAAC,CAAClB,KAAK,GAAG,EAAAsB,UAAA,GAAAH,CAAC,CAACC,OAAO,cAAAE,UAAA,uBAATA,UAAA,CAAW5C,OAAO,KAAI,iBAAiB;IACnD,CAAC,CAAC;IAEFqC,CAAC,CAACC,OAAO,CAACO,qBAAqB,CAACN,SAAS,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK;MACnDD,CAAC,CAACP,IAAI,GAAGQ,CAAC,CAACC,OAAO;MAClBF,CAAC,CAAClB,KAAK,GAAG,IAAI;IAChB,CAAC,CAAC;IACFe,CAAC,CAACC,OAAO,CAACO,qBAAqB,CAACF,QAAQ,EAAE,CAACH,CAAC,EAAEC,CAAC,KAAK;MAAA,IAAAK,WAAA;MAClDN,CAAC,CAAClB,KAAK,GAAG,EAAAwB,WAAA,GAAAL,CAAC,CAACC,OAAO,cAAAI,WAAA,uBAATA,WAAA,CAAW9C,OAAO,KAAI,8BAA8B;IAChE,CAAC,CAAC;IAEFqC,CAAC,CAACC,OAAO,CAACZ,uBAAuB,CAACa,SAAS,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK;MACrDD,CAAC,CAACP,IAAI,GAAGO,CAAC,CAACP,IAAI,CAACc,GAAG,CAACC,CAAC,IAAIA,CAAC,CAAC/B,EAAE,KAAKwB,CAAC,CAACC,OAAO,CAACzB,EAAE,GAAGwB,CAAC,CAACC,OAAO,GAAGM,CAAC,CAAC;MAC/DR,CAAC,CAAClB,KAAK,GAAG,IAAI;IAChB,CAAC,CAAC;IACFe,CAAC,CAACC,OAAO,CAACZ,uBAAuB,CAACiB,QAAQ,EAAE,CAACH,CAAC,EAAEC,CAAC,KAAK;MAAA,IAAAQ,WAAA;MACpDT,CAAC,CAAClB,KAAK,GAAG,EAAA2B,WAAA,GAAAR,CAAC,CAACC,OAAO,cAAAO,WAAA,uBAATA,WAAA,CAAWjD,OAAO,KAAI,yBAAyB;IAC3D,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,eAAe8B,KAAK,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}