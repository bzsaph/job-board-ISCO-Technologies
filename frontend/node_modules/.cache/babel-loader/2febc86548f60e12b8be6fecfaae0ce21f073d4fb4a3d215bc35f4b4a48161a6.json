{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../../services/api';\nexport const fetchJobs = createAsyncThunk('jobs/fetch', async (params = '') => {\n  const res = await api.get(`/jobs${params}`);\n  return res.data;\n});\nexport const fetchJob = createAsyncThunk('jobs/fetchOne', async id => {\n  const res = await api.get(`/jobs/${id}`);\n  return res.data;\n});\nexport const createJob = createAsyncThunk('jobs/create', async payload => {\n  const res = await api.post('/jobs', payload);\n  return res.data;\n});\nexport const updateJob = createAsyncThunk('jobs/update', async ({\n  id,\n  data\n}) => {\n  const res = await api.put(`/jobs/${id}`, data);\n  return res.data;\n});\nexport const deleteJob = createAsyncThunk('jobs/delete', async id => {\n  await api.delete(`/jobs/${id}`);\n  return id;\n});\nconst slice = createSlice({\n  name: 'jobs',\n  initialState: {\n    list: [],\n    current: null,\n    status: 'idle'\n  },\n  reducers: {},\n  extraReducers: b => {\n    b.addCase(fetchJobs.fulfilled, (s, a) => {\n      s.list = a.payload;\n    });\n    b.addCase(fetchJob.fulfilled, (s, a) => {\n      s.current = a.payload;\n    });\n    b.addCase(createJob.fulfilled, (s, a) => {\n      s.list.unshift(a.payload);\n    });\n    b.addCase(deleteJob.fulfilled, (s, a) => {\n      s.list = s.list.filter(j => j.id !== a.payload);\n    });\n    b.addCase(updateJob.fulfilled, (s, a) => {\n      s.list = s.list.map(j => j.id === a.payload.id ? a.payload : j);\n      s.current = a.payload;\n    });\n  }\n});\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","fetchJobs","params","res","get","data","fetchJob","id","createJob","payload","post","updateJob","put","deleteJob","delete","slice","name","initialState","list","current","status","reducers","extraReducers","b","addCase","fulfilled","s","a","unshift","filter","j","map","reducer"],"sources":["D:/fullstacker/job-board/frontend/src/store/slices/jobsSlice.js"],"sourcesContent":["\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../../services/api';\n\nexport const fetchJobs = createAsyncThunk('jobs/fetch', async (params='') => {\n  const res = await api.get(`/jobs${params}`);\n  return res.data;\n});\nexport const fetchJob = createAsyncThunk('jobs/fetchOne', async (id) => {\n  const res = await api.get(`/jobs/${id}`);\n  return res.data;\n});\nexport const createJob = createAsyncThunk('jobs/create', async (payload) => {\n  const res = await api.post('/jobs', payload);\n  return res.data;\n});\nexport const updateJob = createAsyncThunk('jobs/update', async ({ id, data }) => {\n  const res = await api.put(`/jobs/${id}`, data);\n  return res.data;\n});\nexport const deleteJob = createAsyncThunk('jobs/delete', async (id) => {\n  await api.delete(`/jobs/${id}`);\n  return id;\n});\n\nconst slice = createSlice({\n  name: 'jobs',\n  initialState: { list: [], current: null, status: 'idle' },\n  reducers: {},\n  extraReducers: (b) => {\n    b.addCase(fetchJobs.fulfilled, (s, a) => { s.list = a.payload; });\n    b.addCase(fetchJob.fulfilled, (s, a) => { s.current = a.payload; });\n    b.addCase(createJob.fulfilled, (s, a) => { s.list.unshift(a.payload); });\n    b.addCase(deleteJob.fulfilled, (s, a) => { s.list = s.list.filter(j => j.id !== a.payload); });\n    b.addCase(updateJob.fulfilled, (s, a) => { s.list = s.list.map(j => j.id === a.payload.id ? a.payload : j); s.current = a.payload; });\n  }\n});\nexport default slice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}