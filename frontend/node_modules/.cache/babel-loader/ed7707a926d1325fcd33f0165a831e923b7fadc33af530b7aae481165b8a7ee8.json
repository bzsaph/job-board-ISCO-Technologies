{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../../services/api';\nexport function setAuthToken(token) {\n  if (token) api.defaults.headers.common['Authorization'] = `Bearer ${token}`;else delete api.defaults.headers.common['Authorization'];\n  console.log(\"Setting auth token:,.....\", token);\n}\nconsole;\n\n// Fetch all jobs (public)\nexport const fetchJobs = createAsyncThunk('jobs/fetch', async (params = '') => {\n  const res = await api.get(`/jobs${params}`);\n  return res.data;\n});\n\n// Fetch single job (public)\nexport const fetchJob = createAsyncThunk('jobs/fetchOne', async id => {\n  const res = await api.get(`/jobs/${id}`);\n  return res.data;\n});\n\n// Create job (requires auth)\nexport const createJob = createAsyncThunk('jobs/create', async (payload, {\n  getState\n}) => {\n  const token = getState().auth.token;\n  console.log(getState().auth.token);\n  if (!token) throw new Error('Not logged in');\n  setAuthToken(token); // ensure axios has it globally\n  const res = await api.post('/jobs', payload); // no need to pass headers here\n  // ...............................\n  console.log(\"...............................\", res.data);\n  return res.data;\n});\n\n// Update job (requires auth)\nexport const updateJob = createAsyncThunk('jobs/update', async ({\n  id,\n  data\n}, {\n  getState\n}) => {\n  const token = getState().auth.token;\n  if (!token) throw new Error('Not logged in');\n  const res = await api.put(`/jobs/${id}`, data, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  });\n  return res.data;\n});\n\n// Delete job (requires auth)\nexport const deleteJob = createAsyncThunk('jobs/delete', async (id, {\n  getState\n}) => {\n  const token = getState().auth.token;\n  if (!token) throw new Error('Not logged in');\n  await api.delete(`/jobs/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return id;\n});\nconst slice = createSlice({\n  name: 'jobs',\n  initialState: {\n    list: [],\n    current: null,\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchJobs.fulfilled, (state, action) => {\n      state.list = action.payload;\n      state.error = null;\n    }).addCase(fetchJobs.rejected, (state, action) => {\n      state.error = action.error.message;\n    }).addCase(fetchJob.fulfilled, (state, action) => {\n      state.current = action.payload;\n      state.error = null;\n    }).addCase(fetchJob.rejected, (state, action) => {\n      state.error = action.error.message;\n    }).addCase(createJob.fulfilled, (state, action) => {\n      state.list.unshift(action.payload);\n      state.error = null;\n    }).addCase(createJob.rejected, (state, action) => {\n      state.error = action.error.message;\n    }).addCase(updateJob.fulfilled, (state, action) => {\n      state.list = state.list.map(j => j.id === action.payload.id ? action.payload : j);\n      state.current = action.payload;\n      state.error = null;\n    }).addCase(updateJob.rejected, (state, action) => {\n      state.error = action.error.message;\n    }).addCase(deleteJob.fulfilled, (state, action) => {\n      state.list = state.list.filter(j => j.id !== action.payload);\n      state.error = null;\n    }).addCase(deleteJob.rejected, (state, action) => {\n      state.error = action.error.message;\n    });\n  }\n});\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","setAuthToken","token","defaults","headers","common","console","log","fetchJobs","params","res","get","data","fetchJob","id","createJob","payload","getState","auth","Error","post","updateJob","put","Authorization","deleteJob","delete","slice","name","initialState","list","current","status","error","reducers","extraReducers","builder","addCase","fulfilled","state","action","rejected","message","unshift","map","j","filter","reducer"],"sources":["D:/fullstacker/job-board/frontend/src/store/slices/jobsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../../services/api';\nexport function setAuthToken(token) {\n\n  if (token) api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n \n  else delete api.defaults.headers.common['Authorization'];\n  console.log(\"Setting auth token:,.....\", token);\n}\nconsole\n\n// Fetch all jobs (public)\nexport const fetchJobs = createAsyncThunk('jobs/fetch', async (params = '') => {\n  const res = await api.get(`/jobs${params}`);\n  return res.data;\n});\n\n// Fetch single job (public)\nexport const fetchJob = createAsyncThunk('jobs/fetchOne', async (id) => {\n  const res = await api.get(`/jobs/${id}`);\n  return res.data;\n});\n\n// Create job (requires auth)\nexport const createJob = createAsyncThunk(\n  'jobs/create',\n  async (payload, { getState }) => {\n    const token = getState().auth.token;\n    console.log(getState().auth.token);\n    if (!token) throw new Error('Not logged in');\n\n    setAuthToken(token); // ensure axios has it globally\n    const res = await api.post('/jobs', payload); // no need to pass headers here\n    // ...............................\n    console.log(\"...............................\",res.data);\n    return res.data;\n  }\n);\n\n\n// Update job (requires auth)\nexport const updateJob = createAsyncThunk(\n  'jobs/update',\n  async ({ id, data }, { getState }) => {\n    const token = getState().auth.token;\n    if (!token) throw new Error('Not logged in');\n\n    const res = await api.put(`/jobs/${id}`, data, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n    });\n    return res.data;\n  }\n);\n\n// Delete job (requires auth)\nexport const deleteJob = createAsyncThunk(\n  'jobs/delete',\n  async (id, { getState }) => {\n    const token = getState().auth.token;\n    if (!token) throw new Error('Not logged in');\n\n    await api.delete(`/jobs/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return id;\n  }\n);\n\nconst slice = createSlice({\n  name: 'jobs',\n  initialState: { list: [], current: null, status: 'idle', error: null },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchJobs.fulfilled, (state, action) => {\n        state.list = action.payload;\n        state.error = null;\n      })\n      .addCase(fetchJobs.rejected, (state, action) => {\n        state.error = action.error.message;\n      })\n      .addCase(fetchJob.fulfilled, (state, action) => {\n        state.current = action.payload;\n        state.error = null;\n      })\n      .addCase(fetchJob.rejected, (state, action) => {\n        state.error = action.error.message;\n      })\n      .addCase(createJob.fulfilled, (state, action) => {\n        state.list.unshift(action.payload);\n        state.error = null;\n      })\n      .addCase(createJob.rejected, (state, action) => {\n        state.error = action.error.message;\n      })\n      .addCase(updateJob.fulfilled, (state, action) => {\n        state.list = state.list.map(j => j.id === action.payload.id ? action.payload : j);\n        state.current = action.payload;\n        state.error = null;\n      })\n      .addCase(updateJob.rejected, (state, action) => {\n        state.error = action.error.message;\n      })\n      .addCase(deleteJob.fulfilled, (state, action) => {\n        state.list = state.list.filter(j => j.id !== action.payload);\n        state.error = null;\n      })\n      .addCase(deleteJob.rejected, (state, action) => {\n        state.error = action.error.message;\n      });\n  },\n});\n\n\nexport default slice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}