{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../../services/api';\n\n// applicationsSlice.js\nexport const applyJob = createAsyncThunk('applications/apply', async (formData, {\n  getState\n}) => {\n  const token = getState().auth.token; // get token from Redux\n\n  if (!token) throw new Error('User not logged in');\n  const res = await api.post('/applications', formData, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      // important!\n      'Content-Type': 'multipart/form-data' // for file uploads\n    }\n  });\n  return res.data;\n});\nexport const getApplicationsForJob = createAsyncThunk('applications/forJob', async jobId => {\n  const res = await api.get(`/applications/job/${jobId}`);\n  return res.data;\n});\nexport const updateApplicationStatus = createAsyncThunk('applications/update', async ({\n  id,\n  status\n}) => {\n  const res = await api.put(`/applications/${id}`, {\n    status\n  });\n  return res.data;\n});\nconst slice = createSlice({\n  name: 'applications',\n  initialState: {\n    list: [],\n    status: 'idle'\n  },\n  reducers: {},\n  extraReducers: b => {\n    b.addCase(applyJob.fulfilled, (s, a) => {\n      s.last = a.payload;\n    });\n    b.addCase(getApplicationsForJob.fulfilled, (s, a) => {\n      s.list = a.payload;\n    });\n    b.addCase(updateApplicationStatus.fulfilled, (s, a) => {\n      s.list = s.list.map(x => x.id === a.payload.id ? a.payload : x);\n    });\n  }\n});\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","applyJob","formData","getState","token","auth","Error","res","post","headers","Authorization","data","getApplicationsForJob","jobId","get","updateApplicationStatus","id","status","put","slice","name","initialState","list","reducers","extraReducers","b","addCase","fulfilled","s","a","last","payload","map","x","reducer"],"sources":["D:/fullstacker/job-board/frontend/src/store/slices/applicationsSlice.js"],"sourcesContent":["\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../../services/api';\n\n// applicationsSlice.js\nexport const applyJob = createAsyncThunk(\n  'applications/apply',\n  async (formData, { getState }) => {\n    const token = getState().auth.token; // get token from Redux\n\n    if (!token) throw new Error('User not logged in');\n\n    const res = await api.post('/applications', formData, {\n      headers: {\n        Authorization: `Bearer ${token}`,  // important!\n        'Content-Type': 'multipart/form-data', // for file uploads\n      },\n    });\n\n    return res.data;\n  }\n);\n\nexport const getApplicationsForJob = createAsyncThunk('applications/forJob', async (jobId) => {\n  const res = await api.get(`/applications/job/${jobId}`);\n  return res.data;\n});\nexport const updateApplicationStatus = createAsyncThunk('applications/update', async ({ id, status }) => {\n  const res = await api.put(`/applications/${id}`, { status });\n  return res.data;\n});\n\nconst slice = createSlice({\n  name: 'applications',\n  initialState: { list: [], status: 'idle' },\n  reducers: {},\n  extraReducers: (b) => {\n    b.addCase(applyJob.fulfilled, (s, a) => { s.last = a.payload; });\n    b.addCase(getApplicationsForJob.fulfilled, (s, a) => { s.list = a.payload; });\n    b.addCase(updateApplicationStatus.fulfilled, (s, a) => { s.list = s.list.map(x => x.id === a.payload.id ? a.payload : x); });\n  }\n});\nexport default slice.reducer;\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,GAAG,MAAM,oBAAoB;;AAEpC;AACA,OAAO,MAAMC,QAAQ,GAAGF,gBAAgB,CACtC,oBAAoB,EACpB,OAAOG,QAAQ,EAAE;EAAEC;AAAS,CAAC,KAAK;EAChC,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC,CAACE,IAAI,CAACD,KAAK,CAAC,CAAC;;EAErC,IAAI,CAACA,KAAK,EAAE,MAAM,IAAIE,KAAK,CAAC,oBAAoB,CAAC;EAEjD,MAAMC,GAAG,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,eAAe,EAAEN,QAAQ,EAAE;IACpDO,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUN,KAAK,EAAE;MAAG;MACnC,cAAc,EAAE,qBAAqB,CAAE;IACzC;EACF,CAAC,CAAC;EAEF,OAAOG,GAAG,CAACI,IAAI;AACjB,CACF,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAGb,gBAAgB,CAAC,qBAAqB,EAAE,MAAOc,KAAK,IAAK;EAC5F,MAAMN,GAAG,GAAG,MAAMP,GAAG,CAACc,GAAG,CAAC,qBAAqBD,KAAK,EAAE,CAAC;EACvD,OAAON,GAAG,CAACI,IAAI;AACjB,CAAC,CAAC;AACF,OAAO,MAAMI,uBAAuB,GAAGhB,gBAAgB,CAAC,qBAAqB,EAAE,OAAO;EAAEiB,EAAE;EAAEC;AAAO,CAAC,KAAK;EACvG,MAAMV,GAAG,GAAG,MAAMP,GAAG,CAACkB,GAAG,CAAC,iBAAiBF,EAAE,EAAE,EAAE;IAAEC;EAAO,CAAC,CAAC;EAC5D,OAAOV,GAAG,CAACI,IAAI;AACjB,CAAC,CAAC;AAEF,MAAMQ,KAAK,GAAGrB,WAAW,CAAC;EACxBsB,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEL,MAAM,EAAE;EAAO,CAAC;EAC1CM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,CAAC,IAAK;IACpBA,CAAC,CAACC,OAAO,CAACzB,QAAQ,CAAC0B,SAAS,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK;MAAED,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACE,OAAO;IAAE,CAAC,CAAC;IAChEN,CAAC,CAACC,OAAO,CAACd,qBAAqB,CAACe,SAAS,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK;MAAED,CAAC,CAACN,IAAI,GAAGO,CAAC,CAACE,OAAO;IAAE,CAAC,CAAC;IAC7EN,CAAC,CAACC,OAAO,CAACX,uBAAuB,CAACY,SAAS,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK;MAAED,CAAC,CAACN,IAAI,GAAGM,CAAC,CAACN,IAAI,CAACU,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACjB,EAAE,KAAKa,CAAC,CAACE,OAAO,CAACf,EAAE,GAAGa,CAAC,CAACE,OAAO,GAAGE,CAAC,CAAC;IAAE,CAAC,CAAC;EAC9H;AACF,CAAC,CAAC;AACF,eAAed,KAAK,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}