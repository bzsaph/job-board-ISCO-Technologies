{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../../services/api';\n\n// Fetch applications of the logged-in user\nexport const fetchMyApplications = createAsyncThunk('applications/fetchMyApplications', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const res = await api.get('/applications/mine');\n    console.log('Fetched applications:', res.data);\n    return res.data;\n  } catch (err) {\n    var _err$response;\n    return rejectWithValue(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || {\n      message: err.message\n    });\n  }\n});\nconst slice = createSlice({\n  name: 'applications',\n  initialState: {\n    myApplications: [],\n    // logged-in user applications\n    list: [],\n    // all applications (for admin)\n    last: null,\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchMyApplications.pending, state => {\n      state.status = 'loading';\n      state.error = null;\n    }).addCase(fetchMyApplications.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.myApplications = action.payload;\n      state.error = null;\n    }).addCase(fetchMyApplications.rejected, (state, action) => {\n      var _action$payload;\n      state.status = 'failed';\n      state.error = ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.message) || 'Failed to fetch applications';\n    });\n  }\n});\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","fetchMyApplications","_","rejectWithValue","res","get","console","log","data","err","_err$response","response","message","slice","name","initialState","myApplications","list","last","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","_action$payload","reducer"],"sources":["D:/fullstacker/job-board/frontend/src/store/slices/myapplicationslices.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api from '../../services/api';\r\n\r\n// Fetch applications of the logged-in user\r\nexport const fetchMyApplications = createAsyncThunk(\r\n  'applications/fetchMyApplications',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const res = await api.get('/applications/mine');\r\n      console.log('Fetched applications:', res.data);\r\n      return res.data;\r\n    } catch (err) {\r\n      return rejectWithValue(err.response?.data || { message: err.message });\r\n    }\r\n  }\r\n);\r\n\r\nconst slice = createSlice({\r\n  name: 'applications',\r\n  initialState: {\r\n    myApplications: [], // logged-in user applications\r\n    list: [],           // all applications (for admin)\r\n    last: null,\r\n    status: 'idle',\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchMyApplications.pending, (state) => {\r\n        state.status = 'loading';\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchMyApplications.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.myApplications = action.payload;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchMyApplications.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.payload?.message || 'Failed to fetch applications';\r\n      });\r\n  },\r\n});\r\n\r\nexport default slice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,GAAG,MAAM,oBAAoB;;AAEpC;AACA,OAAO,MAAMC,mBAAmB,GAAGF,gBAAgB,CACjD,kCAAkC,EAClC,OAAOG,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAChC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,oBAAoB,CAAC;IAC/CC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,GAAG,CAACI,IAAI,CAAC;IAC9C,OAAOJ,GAAG,CAACI,IAAI;EACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;IAAA,IAAAC,aAAA;IACZ,OAAOP,eAAe,CAAC,EAAAO,aAAA,GAAAD,GAAG,CAACE,QAAQ,cAAAD,aAAA,uBAAZA,aAAA,CAAcF,IAAI,KAAI;MAAEI,OAAO,EAAEH,GAAG,CAACG;IAAQ,CAAC,CAAC;EACxE;AACF,CACF,CAAC;AAED,MAAMC,KAAK,GAAGf,WAAW,CAAC;EACxBgB,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAE;IACZC,cAAc,EAAE,EAAE;IAAE;IACpBC,IAAI,EAAE,EAAE;IAAY;IACpBC,IAAI,EAAE,IAAI;IACVC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACvB,mBAAmB,CAACwB,OAAO,EAAGC,KAAK,IAAK;MAC/CA,KAAK,CAACP,MAAM,GAAG,SAAS;MACxBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDI,OAAO,CAACvB,mBAAmB,CAAC0B,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACzDF,KAAK,CAACP,MAAM,GAAG,WAAW;MAC1BO,KAAK,CAACV,cAAc,GAAGY,MAAM,CAACC,OAAO;MACrCH,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDI,OAAO,CAACvB,mBAAmB,CAAC6B,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAAA,IAAAG,eAAA;MACxDL,KAAK,CAACP,MAAM,GAAG,QAAQ;MACvBO,KAAK,CAACN,KAAK,GAAG,EAAAW,eAAA,GAAAH,MAAM,CAACC,OAAO,cAAAE,eAAA,uBAAdA,eAAA,CAAgBnB,OAAO,KAAI,8BAA8B;IACzE,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeC,KAAK,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}