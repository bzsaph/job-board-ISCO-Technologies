{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstacker\\\\job-board\\\\frontend\\\\src\\\\pages\\\\AdminApplications.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getApplicationsForJob } from '../store/slices/applicationsSlice';\nimport api from '../api'; // your axios instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminApplications() {\n  _s();\n  const {\n    jobId\n  } = useParams();\n  const dispatch = useDispatch();\n  const apps = useSelector(s => s.applications.list);\n  const [job, setJob] = useState(null);\n\n  // Fetch applications\n  useEffect(() => {\n    if (jobId) dispatch(getApplicationsForJob(jobId));\n  }, [dispatch, jobId]);\n\n  // Fetch job details\n  useEffect(() => {\n    const fetchJob = async () => {\n      try {\n        const res = await api.get(`/jobs/${jobId}`);\n        setJob(res.data);\n      } catch (err) {\n        console.error('Failed to fetch job', err);\n      }\n    };\n    if (jobId) fetchJob();\n  }, [jobId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl mb-2\",\n      children: [\"Applications for job \", job ? job.title : jobId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: apps.map(a => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"mb-3 p-3 border rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold\",\n          children: a.applicantEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm mb-2\",\n          children: a.coverLetter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: a.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, a.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminApplications, \"6UUmcau6O37kq4Y9N3Wg2dOqjO0=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = AdminApplications;\nvar _c;\n$RefreshReg$(_c, \"AdminApplications\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useDispatch","useSelector","getApplicationsForJob","api","jsxDEV","_jsxDEV","AdminApplications","_s","jobId","dispatch","apps","s","applications","list","job","setJob","fetchJob","res","get","data","err","console","error","children","className","title","fileName","_jsxFileName","lineNumber","columnNumber","map","a","applicantEmail","coverLetter","status","id","_c","$RefreshReg$"],"sources":["D:/fullstacker/job-board/frontend/src/pages/AdminApplications.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getApplicationsForJob } from '../store/slices/applicationsSlice';\nimport api from '../api'; // your axios instance\n\nexport default function AdminApplications() {\n  const { jobId } = useParams();\n  const dispatch = useDispatch();\n  const apps = useSelector(s => s.applications.list);\n  const [job, setJob] = useState(null);\n\n  // Fetch applications\n  useEffect(() => {\n    if (jobId) dispatch(getApplicationsForJob(jobId));\n  }, [dispatch, jobId]);\n\n  // Fetch job details\n  useEffect(() => {\n    const fetchJob = async () => {\n      try {\n        const res = await api.get(`/jobs/${jobId}`);\n        setJob(res.data);\n      } catch (err) {\n        console.error('Failed to fetch job', err);\n      }\n    };\n    if (jobId) fetchJob();\n  }, [jobId]);\n\n  return (\n    <div>\n      <h2 className=\"text-xl mb-2\">\n        Applications for job {job ? job.title : jobId}\n      </h2>\n      <ul>\n        {apps.map(a => (\n          <li key={a.id} className=\"mb-3 p-3 border rounded\">\n            <div className=\"font-semibold\">{a.applicantEmail}</div>\n            <div className=\"text-sm mb-2\">{a.coverLetter}</div>\n            <div className=\"mb-2\">Status: <strong>{a.status}</strong></div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}